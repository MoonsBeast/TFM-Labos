services:
  web_server:
    build: 
      context: .
      dockerfile: ./containers/web_server/Dockerfile
    image: fastapi_web_server
    restart: unless-stopped
    command: uvicorn main:app --reload --host 0.0.0.0 --port ${WEB_SERVER_PORT}
    volumes:
      - ./containers/web_server/server:/server
    dns:
      - ${DNS_IP}
    networks:
      internal_network:
        ipv4_address: ${WEB_SERVER_IP}

  evil_web_server:
    build:
      context: .
      dockerfile: ./containers/evil_web_server/Dockerfile
    image: fastapi_evil_web_server
    restart: unless-stopped
    command: uvicorn main:app --reload --host 0.0.0.0 --port ${EVIL_WEB_SERVER_PORT}
    volumes:
      - ./containers/evil_web_server/server:/server
    dns:
      - ${DNS_IP}
    networks:
      internal_network:
        ipv4_address: ${EVIL_WEB_SERVER_IP}

  dns:
    image: strm/dnsmasq
    restart: always
    volumes:
      - ./containers/dns/config/dnsmasq.conf:/etc/dnsmasq.conf
    cap_add:
      - NET_ADMIN
    networks:
      internal_network:
        ipv4_address: ${DNS_IP}

  http_requester:
    build:
      context: .
      dockerfile: ./containers/requester/Dockerfile
    image: http_requester
    restart: unless-stopped
    environment:
      REQUEST_TARGET: ${REQUESTER_TARGET}
      SLEEP_TIME: ${REQUESTER_SLEEP_TIME}
    dns:
      - ${DNS_IP}
    networks:
      internal_network:
        ipv4_address: ${REQUESTER_IP}

  kali_attacker:
    build:
      context: .
      dockerfile: ./containers/kali_attacker/Dockerfile
    image: kali_attacker
    restart: unless-stopped
    tty: true
    stdin_open: true
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./containers/kali_attacker/scripts:/scripts
      - ./containers/kali_attacker/captures:/captures
    dns:
      - ${DNS_IP}
    networks:
      internal_network:
        ipv4_address: ${KALI_IP}

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:

# Network definition - Bridge to allow ARP spoofing
networks:
  internal_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}/${SUBNET_MASK}
          gateway: ${GATEWAY}
